!function(e){function t(t){for(var s,i,o=t[0],l=t[1],c=t[2],u=0,h=[];u<o.length;u++)i=o[u],Object.prototype.hasOwnProperty.call(a,i)&&a[i]&&h.push(a[i][0]),a[i]=0;for(s in l)Object.prototype.hasOwnProperty.call(l,s)&&(e[s]=l[s]);for(d&&d(t);h.length;)h.shift()();return r.push.apply(r,c||[]),n()}function n(){for(var e,t=0;t<r.length;t++){for(var n=r[t],s=!0,o=1;o<n.length;o++){var l=n[o];0!==a[l]&&(s=!1)}s&&(r.splice(t--,1),e=i(i.s=n[0]))}return e}var s={},a={0:0},r=[];function i(t){if(s[t])return s[t].exports;var n=s[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=s,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)i.d(n,s,function(t){return e[t]}.bind(null,s));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="/wp-content/themes/fictional-university/bundled-assets/";var o=window.webpackJsonp=window.webpackJsonp||[],l=o.push.bind(o);o.push=t,o=o.slice();for(var c=0;c<o.length;c++)t(o[c]);var d=l;r.push([2,1]),n()}([,function(e,t,n){},function(e,t,n){"use strict";n.r(t);n(1);var s=class{constructor(){this.menu=document.querySelector(".site-header__menu"),this.openButton=document.querySelector(".site-header__menu-trigger"),this.events()}events(){this.openButton.addEventListener("click",()=>this.openMenu())}openMenu(){this.openButton.classList.toggle("fa-bars"),this.openButton.classList.toggle("fa-window-close"),this.menu.classList.toggle("site-header__menu--active")}},a=n(0);var r=class{constructor(){if(document.querySelector(".hero-slider")){const e=document.querySelectorAll(".hero-slider__slide").length;let t="";for(let n=0;n<e;n++)t+=`<button class="slider__bullet glide__bullet" data-glide-dir="=${n}"></button>`;document.querySelector(".glide__bullets").insertAdjacentHTML("beforeend",t),new a.a(".hero-slider",{type:"carousel",perView:1,autoplay:3e3}).mount()}}};var i=class{constructor(){document.querySelectorAll(".acf-map").forEach(e=>{this.new_map(e)})}new_map(e){var t=e.querySelectorAll(".marker"),n={zoom:16,center:new google.maps.LatLng(0,0),mapTypeId:google.maps.MapTypeId.ROADMAP},s=new google.maps.Map(e,n);s.markers=[];var a=this;t.forEach((function(e){a.add_marker(e,s)})),this.center_map(s)}add_marker(e,t){var n=new google.maps.LatLng(e.getAttribute("data-lat"),e.getAttribute("data-lng")),s=new google.maps.Marker({position:n,map:t});if(t.markers.push(s),e.innerHTML){var a=new google.maps.InfoWindow({content:e.innerHTML});google.maps.event.addListener(s,"click",(function(){a.open(t,s)}))}}center_map(e){var t=new google.maps.LatLngBounds;e.markers.forEach((function(e){var n=new google.maps.LatLng(e.position.lat(),e.position.lng());t.extend(n)})),1==e.markers.length?(e.setCenter(t.getCenter()),e.setZoom(16)):e.fitBounds(t)}};var o=class{constructor(){this.body=document.querySelector("body"),this.openButton=document.querySelector(".search-trigger"),this.closeButton=document.querySelector(".search-overlay__close"),this.searchOverlay=document.querySelector(".search-overlay"),this.searchField=document.querySelector("#search-term"),this.results=document.querySelector("#search-results"),this.anyField=document.querySelectorAll("input, textarea"),this.events(),this.isOverlayOpen=!1,this.isSpinnerVisible=!1,this.previousValue,this.typingTimer}events(){this.openButton.addEventListener("click",e=>{e.preventDefault(),this.openOverlay()}),this.closeButton.addEventListener("click",()=>this.closeOverlay()),this.body.addEventListener("keydown",e=>this.keyPressDispatcher(e)),this.searchField.addEventListener("keyup",()=>this.typingLogic(),!0)}typingLogic(){this.searchField.value!==this.previousValue&&(clearTimeout(this.typingTimer),this.searchField.value?this.searchField.value&&(this.isSpinnerVisible||(this.results.innerHTML='<div class="spinner-loader"></div>',this.isSpinnerVisible=!0),this.typingTimer=setTimeout(()=>this.getResults(),300)):(this.results.innerHTML="",this.isSpinnerVisible=!1)),this.previousValue=this.searchField.value}getResults(){fetch(fictionalUniversityData.rootUrl+"/wp-json/university/v1/search?term="+this.searchField.value).then(e=>e.json()).then(e=>{this.results.innerHTML=`\n          <div class="row">\n            <div class="one-third">\n              <h2 class="search-overlay__section-title">General info</h2>\n\n              ${e.generalInfo.length>0?'<ul class="link-list min-list">':"<p>No general information matches that search</p>"}\n\n              ${e.generalInfo.map(e=>`<li>\n                  <a href="${e.permalink}">${e.title}</a>\n                  ${"post"===e.postType?"by "+e.authorName:""}\n                </li>`).join("")}\n\n              ${e.generalInfo.length>0?"</ul>":""}\n\n            </div>\n            <div class="one-third">\n              <h2 class="search-overlay__section-title">Programs</h2>\n\n              ${e.programs.length>0?'<ul class="link-list min-list">':`<p>No program match that search.\n                  <a href="${fictionalUniversityData.rootUrl}/programs">View all Programs</a>\n                </p>`}\n\n              ${e.programs.map(e=>`<li>\n                  <a href="${e.permalink}">${e.title}</a>\n                </li>`).join("")}\n\n              ${e.programs.length>0?"</ul>":""}\n\n              <h2 class="search-overlay__section-title">Professors</h2>\n\n              ${e.professors.length>0?'<ul class="professor-cards">':"<p>No Professors match that search.</p>"}\n\n              ${e.professors.map(e=>`<li class="professor-card__list-item">\n                  <a class="professor-card" href="${e.permalink}">\n                    ${e.image}\n                    <span class="professor-card__name">${e.title}</span>\n\n                  </a>\n                </li>`).join("")}\n\n              ${e.professors.length>0?"</ul>":""}\n\n            </div>\n            <div class="one-third">\n              <h2 class="search-overlay__section-title">Campuses</h2>\n\n              ${e.campuses.length>0?'<ul class="link-list min-list">':`<p>No Campus match that search.\n                  <a href="${fictionalUniversityData.rootUrl}/campuses">View all Campuses</a>\n                </p>`}\n\n              ${e.campuses.map(e=>`<li>\n                  <a href="${e.permalink}">${e.title}</a>\n                </li>`).join("")}\n\n              ${e.campuses.length>0?"</ul>":""}\n\n              <h2 class="search-overlay__section-title">Events</h2>\n\n              ${e.events.length>0?"":`<p>No events match that search.\n                  <a href="${fictionalUniversityData.rootUrl}/events">View all events</a>\n                </p>`}\n\n              ${e.events.map(e=>`<div class="event-summary">\n\n                    <a class="event-summary__date t-center" href="${e.permalink}">\n                      <span class="event-summary__month">${e.month}</span>\n                      <span class="event-summary__day">${e.day}</span>\n                    </a>\n                    <div class="event-summary__content">\n                      <h5 class="event-summary__title headline headline--tiny">\n                        <a href="${e.permalink}">${e.title}</a>\n                      </h5>\n                      <p>${e.excerpt}</p>\n                    </div>\n\n                  </div>`).join("")}\n\n\n            </div>\n          </div>\n        `,this.isSpinnerVisible=!1}).catch(e=>console.log("Request pages failed",e))}keyPressDispatcher(e){27===e.keyCode&&this.isOverlayOpen&&this.closeOverlay()}openOverlay(){return this.searchOverlay.classList.add("search-overlay--active"),this.body.classList.add("body-no-scroll"),this.searchField.value="",setTimeout(()=>this.searchField.focus(),301),this.isOverlayOpen=!0,!1}closeOverlay(){this.searchOverlay.classList.remove("search-overlay--active"),this.body.classList.remove("body-no-scroll"),this.isOverlayOpen=!1}};var l=class{constructor(){this.events()}events(){const e=document.querySelectorAll(".submit-note"),t=document.querySelectorAll(".edit-note"),n=document.querySelectorAll(".update-note");document.querySelectorAll(".delete-note").forEach(e=>{e.addEventListener("click",e=>{this.deleteNote(e)})}),t.forEach(e=>{e.addEventListener("click",e=>{this.editNote(e)},!1)}),n.forEach(e=>{e.addEventListener("click",e=>{this.updateNote(e)})}),e.forEach(e=>{e.addEventListener("click",e=>{this.createNote(e)})})}editNote(e){let t=e.target.parentNode;"editable"==t.dataset.state?this.makeNoteReadOnly(t):this.makeNoteEditable(t);fictionalUniversityData.rootUrl,t.dataset.id}makeNoteEditable(e){let t=e.querySelector(".note-title-field"),n=e.querySelector(".note-body-field"),s=e.querySelector(".update-note"),a=e.querySelector(".edit-note");e&&(e.dataset.state="editable"),t&&(t.removeAttribute("readonly"),t.classList.add("note-active-field")),n&&(n.removeAttribute("readonly"),n.classList.add("note-active-field")),s&&s.classList.add("update-note--visible"),a&&(a.innerHTML='<i class="fa fa-times" aria-hidden="true"></i> Cancel')}makeNoteReadOnly(e){let t=e.querySelector(".note-title-field"),n=e.querySelector(".note-body-field"),s=e.querySelector(".update-note"),a=e.querySelector(".edit-note");e&&(e.dataset.state="noneditable"),t&&(t.setAttribute("readonly","readonly"),t.classList.remove("note-active-field")),n&&(n.setAttribute("readonly","readonly"),n.classList.remove("note-active-field")),s&&s.classList.remove("update-note--visible"),a&&(a.innerHTML='<i class="fa fa-pencil" aria-hidden="true"></i> Edit')}async createNote(e){let t=document.querySelector("#my-notes"),n=document.querySelector(".new-note-title"),s=document.querySelector(".new-note-body");n.value,s.value;if(n.value&&s.value){const e=fictionalUniversityData.rootUrl+"/wp-json/wp/v2/note/";try{let a=await fetch(e,{method:"POST",headers:{"X-WP-Nonce":fictionalUniversityData.nonce,"Content-Type":"application/json"},mode:"same-origin",body:JSON.stringifycreatedPost}),r=await a.json();r.noteCount>=4?document.querySelector(".note-limit-message").classList.add("active"):document.querySelector(".note-limit-message").classList.remove("active"),console.log("Success:",a.json()),n.value="",s.value="",t.insertAdjacentHTML("afterBegin",`<li data-id="${r.id}">\n                        <input class="note-title-field" type="text" value="${r.title.raw}" readonly>\n                            <span class="edit-note"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</span>\n                            <span class="delete-note"><i class="fa fa-trash-o" aria-hidden="true"></i> Delete</span>\n                        <textarea class="note-body-field" readonly>${r.content.raw}</textarea>\n                        <span class="update-note btn btn--blue btn--small"><i class="fa fa-arrow-right" aria-hidden="true"></i> Save</span>\n                    </li>`),document.querySelector(".delete-note").addEventListener("click",e=>{this.deleteNote(e)}),document.querySelector(".edit-note").addEventListener("click",e=>{this.editNote(e)},!1),document.querySelector(".update-note").addEventListener("click",e=>{this.updateNote(e)}),document.querySelector(".submit-note").addEventListener("click",e=>{this.createNote(e)})}catch(e){console.log("Возникла проблема с вашим fetch запросом: ",e)}}}async updateNote(e){let t=e.target.parentNode,n=t.querySelector(".note-title-field"),s=t.querySelector(".note-body-field"),a={title:n.value,content:s.value};const r=fictionalUniversityData.rootUrl+"/wp-json/wp/v2/note/"+t.dataset.id;try{const e=await fetch(r,{method:"POST",headers:{"X-WP-Nonce":fictionalUniversityData.nonce,"Content-Type":"application/json"},body:JSON.stringify(a)}),n=await e.json();console.log("Success:",n),this.makeNoteReadOnly(t)}catch(e){console.error("Error:",e)}}async deleteNote(e){let t=e.target.parentNode;const n=fictionalUniversityData.rootUrl+"/wp-json/wp/v2/note/"+t.dataset.id;try{const e=await fetch(n,{method:"DELETE",headers:{"X-WP-Nonce":fictionalUniversityData.nonce}}),s=await e.json();console.group("Success:",s),t.remove()}catch(e){console.error("Error:",e)}}};var c=class{constructor(){}events(){$likeBox=document.querySelector(".like-box"),$likeBox.addEventListener("click",e=>{this.clickDispatcher()})}clickDispatcher(){console.log("click")}};new s,new r,new i,new o,new l,new c}]);